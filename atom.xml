<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Luck_Liu</title>
  <subtitle>Good night,my dear.&quot; Even if I know you will never hear it.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//litten.me/"/>
  <updated>2017-01-15T08:58:19.414Z</updated>
  <id>//litten.me/</id>
  
  <author>
    <name>Luck_Liu</name>
    <email>115547124@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深刻探究Fragment的生命周期以及扩展</title>
    <link href="//litten.me/2017/01/15/%E6%B7%B1%E5%88%BB%E6%8E%A2%E7%A9%B6Fragment%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%BB%A5%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    <id>//litten.me/2017/01/15/深刻探究Fragment的生命周期以及扩展/</id>
    <published>2017-01-15T07:21:50.000Z</published>
    <updated>2017-01-15T08:58:19.414Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>引言<br>剖析Fragment的声明周期<br>Fragmenty与Activity之间生命周期的关系</p>
</blockquote>
<a id="more"></a>
<p>##<strong>引言</strong><br>在Android3.0开始，Android引入了Fragment。当初最主要的目的是为了给大屏幕手持设备提供更加灵活和动态的UI设计。随着应用功能越来越多，界面越来越复杂，我们会利用Fragment对Activity的界面进行模块化编程。比如一个Activity界面内有多个请求，每个请求得到的结果展示不同的UI片段，那么我们就可以将Activity利用Fragment来完成UI模块化。目前在我目前的项目中，Fragment的地位已经举足轻重了。当然我写篇文章，并不是简单的介绍Fragment的用法，而是结合我在项目中使用Fragment所遇到的问题进行说明。</p>
<p>##<strong>生命周期</strong><br><img src="/assets/blogImg/Framentlife.png" alt="Frament生命周期"></p>
<ol>
<li>onAttach(Activity) 调用一次的片段与其活性相关。</li>
<li>onCreate(Bundle) 所谓做片段的初始创建。</li>
<li>onCreateView(LayoutInflater, ViewGroup, Bundle) 创建并返回与片段相关联的视图层次。</li>
<li>onActivityCreated(Bundle)告诉它的活动已完成其自己的片段Activity.onCreate()。</li>
<li>onViewStateRestored(Bundle) 告诉所有的视图层次的保存状态已经恢复的片段。</li>
<li>onStart() 使该片段可见于用户（根据它含有活性被启动）。</li>
<li>onResume() 使得片段开始与用户交互（根据其含有的活性被收回）。</li>
</ol>
<hr>
<p>如不再被使用的一个片段，它通过一个反向串联回调：</p>
<hr>
<ol>
<li>onPause() 片段不再与用户交互可能是因为它的活性被暂停或片段操作修改它的活动。</li>
<li>onStop() 片段不再对用户可见的或者是因为它的活性被停止或片段操作修改它的活动。</li>
<li>onDestroyView() 允许碎片清理与显示有关的资源。</li>
<li>onDestroy() 所谓做片段状态的最后的清理。</li>
<li>onDetach() 叫之前立即不再与它的活动相关联的片段。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;引言&lt;br&gt;剖析Fragment的声明周期&lt;br&gt;Fragmenty与Activity之间生命周期的关系&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android基础" scheme="//litten.me/tags/Android%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Fragment声明周期" scheme="//litten.me/tags/Fragment%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="//litten.me/2017/01/14/hello-world/"/>
    <id>//litten.me/2017/01/14/hello-world/</id>
    <published>2017-01-14T09:39:00.000Z</published>
    <updated>2017-01-14T10:54:55.824Z</updated>
    
    <content type="html"><![CDATA[<p>1/14/2017 6:54:11 PM </p>
<p>博客终于搭建起来了，虽然还不是很完美。好满足啊，手工打造一个属于自己博客。开心啊。</p>
<p>折腾了好久，在github page上看到自己的博客加载下来时，突然有种错综复杂的恍惚感。是的，它不是qq空间，不是新浪博客，不是豆瓣小站，也不是贴吧。它更像是属于自己的一块小小的领地，因而我满足于这种归属感。我愿在上面安静劳作。</p>
<p>一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1/14/2017 6:54:11 PM &lt;/p&gt;
&lt;p&gt;博客终于搭建起来了，虽然还不是很完美。好满足啊，手工打造一个属于自己博客。开心啊。&lt;/p&gt;
&lt;p&gt;折腾了好久，在github page上看到自己的博客加载下来时，突然有种错综复杂的恍惚感。是的，它不是qq空间，不是新
    
    </summary>
    
    
      <category term="杂谈" scheme="//litten.me/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="octopress" scheme="//litten.me/tags/octopress/"/>
    
  </entry>
  
</feed>
